apply {
    plugin "com.android.application"
    plugin "kotlin-android"
    plugin "kotlin-android-extensions"
    plugin Config.depConfig.plugin_api.pluginId
    plugin Config.depConfig.plugin_bus.pluginId
    plugin "kotlin-kapt"
    plugin "dagger.hilt.android.plugin"
}

android {
    compileSdkVersion Config.compileSdkVersion
    defaultConfig {
        minSdkVersion Config.minSdkVersion
        versionCode Config.versionCode
        versionName Config.versionName
        applicationId Config.applicationId + suffix
        targetSdkVersion Config.targetSdkVersion
        multiDexEnabled true
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationIdSuffix ".debug"
            resValue "string", "app_name", Config.appName + suffix + ".debug"
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "app_name", Config.appName + suffix
        }
    }

    packagingOptions {
        exclude 'META-INF/*'
    }

    dexOptions {
        preDexLibraries true
        javaMaxHeapSize "8g"
        maxProcessCount 8
        dexInProcess = true
    }
}

dependencies {
    // LeakCanary
    debugImplementation Config.depConfig.leakcanary_android.dep

    // 根据 Config.pkgConfig 来依赖所有 pkg
    for (def entrySet : ConfigUtils.getApplyPkgs().entrySet()) {
        api entrySet.value.dep
    }

    if (Config.depConfig.feature_mock.isApply) {
        api Config.depConfig.feature_mock.dep
    }

    api(Config.depConfig.hilt.dep)
    api(Config.depConfig.hiltViewModule.dep)
    kapt(Config.depConfig.hiltCompiler.dep)
    kapt(Config.depConfig.hiltViewModuleCompiler.dep)
    kapt(Config.depConfig.hiltViewModuleCompiler.dep)
    kapt(Config.depConfig.glide_compiler.dep) {
        exclude module: 'jsr305'
    }
    kapt(Config.depConfig.roomCompiler.dep)
}

def getSuffix() {
    if (project.name == "feature_launcher_app") return ""
    return "." + project.name.substring("feature_".length(), project.name.length() - "_app".length())
}